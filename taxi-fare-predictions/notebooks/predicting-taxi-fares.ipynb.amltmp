{
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd"
      ],
      "outputs": [],
      "execution_count": 1,
      "metadata": {
        "gather": {
          "logged": 1675906057545
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_yellow_taxi = pd.read_csv('../data/taxi-data/yellowTaxiData.csv')\n",
        "df_green_taxi = pd.read_csv('../data/taxi-data/greenTaxiData.csv')"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "df_yellow_taxi.head()"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Green and Yellow have different column names, but same basic data"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "df_yellow_taxi.columns"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "df_green_taxi.columns"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "columns_taxi_data_combined = [\n",
        "    \"cost\",\n",
        "    \"distance\",\n",
        "    \"dropoff_datetime\",\n",
        "    \"dropoff_latitude\",\n",
        "    \"dropoff_longitude\",\n",
        "    \"passengers\",\n",
        "    \"pickup_datetime\",\n",
        "    \"pickup_latitude\",\n",
        "    \"pickup_longitude\",\n",
        "    \"store_forward\",\n",
        "    \"vendor\"\n",
        "]"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "green_columns_remap =    {\n",
        "        \"vendorID\": \"vendor\",\n",
        "        \"lpepPickupDatetime\": \"pickup_datetime\",\n",
        "        \"lpepDropoffDatetime\": \"dropoff_datetime\",\n",
        "        \"storeAndFwdFlag\": \"store_forward\",\n",
        "        \"pickupLongitude\": \"pickup_longitude\",\n",
        "        \"pickupLatitude\": \"pickup_latitude\",\n",
        "        \"dropoffLongitude\": \"dropoff_longitude\",\n",
        "        \"dropoffLatitude\": \"dropoff_latitude\",\n",
        "        \"passengerCount\": \"passengers\",\n",
        "        \"fareAmount\": \"cost\",\n",
        "        \"tripDistance\": \"distance\",\n",
        "    }\n",
        "df_green_taxi = df_green_taxi.rename(columns=green_columns_remap) \n",
        "df_green_taxi = df_green_taxi[columns_taxi_data_combined]"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "yellow_columns_remap = {\n",
        "        \"vendorID\": \"vendor\",\n",
        "        \"tpepPickupDateTime\": \"pickup_datetime\",\n",
        "        \"tpepDropoffDateTime\": \"dropoff_datetime\",\n",
        "        \"storeAndFwdFlag\": \"store_forward\",\n",
        "        \"startLon\": \"pickup_longitude\",\n",
        "        \"startLat\": \"pickup_latitude\",\n",
        "        \"endLon\": \"dropoff_longitude\",\n",
        "        \"endLat\": \"dropoff_latitude\",\n",
        "        \"passengerCount\": \"passengers\",\n",
        "        \"fareAmount\": \"cost\",\n",
        "        \"tripDistance\": \"distance\",\n",
        "    }\n",
        "df_yellow_taxi = df_yellow_taxi.rename(columns=yellow_columns_remap)\n",
        "df_yellow_taxi = df_yellow_taxi[columns_taxi_data_combined]"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "df_combined_taxi = pd.concat([df_yellow_taxi, df_green_taxi] )"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "df_combined_taxi"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)"
    },
    "language_info": {
      "name": "python",
      "version": "3.8.5",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "orig_nbformat": 4,
    "vscode": {
      "interpreter": {
        "hash": "fddeecfc22e5a95485081fc058dd94d806200493a8aedf1070f5da2457837ae1"
      }
    },
    "kernel_info": {
      "name": "python3"
    },
    "nteract": {
      "version": "nteract-front-end@1.0.0"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 2
}